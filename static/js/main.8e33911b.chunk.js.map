{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","components/ExchangeHeader/logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","TdControls","TdName","Button","button","Coin","props","name","ticker","price","showBalance","balance","action","method","className","onClick","event","preventDefault","handleRefresh","tickerId","handleTransaction","Table","table","CoinList","coinData","map","key","handleBuySell","handlestimulus","Section","section","Balance","div","BalanceToggleButton","formatter","Intl","NumberFormat","style","currency","AccountBalance","buttonText","content","format","amount","buttonClass","handleBalanceVisibilityChange","classNmae","handleBrrr","Img","img","Header","header","H1","h1","ExchangeHeader","src","logo","alt","Component","Div","formatPrice","parseFloat","Number","toFixed","App","useState","setBalance","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangeId","tickerUrl","newPrice","newCoinData","values","newValues","oldBalance","oldValue","isBuy","balanceChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e33911b.chunk.js","sourcesContent":["import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Td = styled.td`\r\n  border: 1px solid #cccccc;\r\n  width: 16vh;\r\n  \r\n`;\r\n\r\n\r\nconst TdControls = styled(Td)`\r\n  width: 36vw;\r\n`;\r\n\r\nconst TdName = styled(Td)`\r\n  width: 24vw;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-size: 11px;\r\n  width: 64px;\r\n  margin: 3px 5px 0;\r\n`;\r\n\r\n\r\n\r\nexport default function Coin(props) {\r\n\r\n\r\n    const handleRefresh = (event) => {\r\n      //prevent the default action of submitting\r\n      event.preventDefault();\r\n      props.handleRefresh(props.tickerId);\r\n      }\r\n\r\n      const handleBuy = (event) => {\r\n        //prevent the default action of submitting\r\n        event.preventDefault();\r\n        props.handleTransaction(true, props.tickerId);\r\n        }\r\n\r\n      const handleSell = (event) => {\r\n        //prevent the default action of submitting\r\n        event.preventDefault();\r\n        props.handleTransaction(false, props.tickerId);\r\n        }\r\n\r\n\r\n    \r\n\r\n    \r\n    return (\r\n      <tr>\r\n          <TdName>{props.name}</TdName>\r\n          <Td>{props.ticker}</Td>\r\n          <Td>${props.price}</Td>\r\n          <Td>{props.showBalance ? props.balance : '-'}</Td>\r\n          <TdControls>\r\n            <form action=\"#\" method=\"POST\">\r\n              <Button className=\"btn btn-info\"onClick={handleRefresh}>\r\n                Refresh\r\n              </Button>\r\n              <Button className=\"btn btn-warning\"onClick={handleBuy}>\r\n                Buy\r\n              </Button>\r\n              <Button className=\"btn btn-danger\"onClick={handleSell}>\r\n                Sell\r\n              </Button>\r\n\r\n\r\n           \r\n            </form>\r\n            \r\n          </TdControls>\r\n\r\n      </tr>\r\n    );\r\n          \r\n};\r\n\r\nCoin.propTypes = { \r\n  name: propTypes.string.isRequired,\r\n  ticker: propTypes.string.isRequired,\r\n  price: propTypes.number.isRequired\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport Coin from '../Coin/Coin';\r\nimport styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n   font-size: 1rem;\r\n               \r\n`;\r\n\r\nexport default function CoinList (props) {\r\n\r\n        return (\r\n            <Table className=\"table table-primary table-border\">\r\n            <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Ticker</th>\r\n                  <th>Price</th>\r\n                  <th>Balance</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                props.coinData.map( ({key, name, ticker, price, balance, handleBuySell, handlestimulus }) => \r\n                  <Coin \r\n                        key={key} \r\n                        handleRefresh={props.handleRefresh} \r\n                        handleTransaction={props.handleTransaction}\r\n                        name={name} \r\n                        ticker={ticker} \r\n                        showBalance={props.showBalance}\r\n                        balance={balance}\r\n                        price={price} \r\n                        tickerId={key} \r\n                        />\r\n                )\r\n              }\r\n         \r\n            </tbody>\r\n          </Table>\r\n        )\r\n    \r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.section`\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    margin:  2rem;\r\n    line-height: 3rem;\r\n    display: inline-block;\r\n`;\r\n\r\nconst Balance = styled.div`\r\n    min-width: 250px;\r\n    margin: 0.5rem 0 0 2.5rem;\r\n    font-size: 1.5em;\r\n    vertical-align: middle;\r\n    text-align: left;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    margin: 0 8px;\r\n`;\r\n\r\nconst BalanceToggleButton = styled(Button)`\r\n    width: 150px;\r\n`;\r\n\r\nvar formatter = Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD'\r\n});\r\n\r\nexport default function AccountBalance (props) {\r\n\r\n    const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\r\n    let content = '\\u00A0';\r\n    if (props.showBalance) {\r\n        content = <>{ formatter.format(props.amount) }</>\r\n    }\r\n    const buttonClass = 'btn ' + (props.showBalance ? 'btn-warning' : 'btn-info');\r\n    return (\r\n        <>\r\n            <Balance>{content}</Balance>\r\n            <Section >\r\n                <BalanceToggleButton \r\n                    onClick={props.handleBalanceVisibilityChange}\r\n                    className={buttonClass}>\r\n                    {buttonText}\r\n                </BalanceToggleButton>\r\n                <Button classNmae=\"btn btn-success\"\r\n                        onClick={props.handleBrrr}>\r\n                    <i className=\"fas fa-helicopter\"></i>\r\n                </Button>\r\n                \r\n            </Section>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nAccountBalance.propTypes = { \r\n    amount: PropTypes.number.isRequired\r\n  }","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\nimport logo from './logo.svg';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Img = styled.img`\r\n    height: 8rem;\r\n    pointer-events: none;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    background-color: #282c34;\r\n    min-height: 10vh;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: white;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n    font-size: 3rem;\r\n    line-height: 8rem;\r\n    font-weight: bold;\r\n    min-width: 300px;\r\n`;\r\n  \r\n  \r\n\r\nexport default class ExchangeHeader extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Header >\r\n                <Img src={logo} alt=\"React logo\" />\r\n                <H1>\r\n                    Coin exchange \r\n                </H1>\r\n            </Header>\r\n        );\r\n    } \r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport CoinList from './components/CoinList/CoinList';\r\nimport AccountBalance from './components/AccountBalance/AccountBalance';\r\nimport styled from 'styled-components';\r\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader';\r\nimport axios from 'axios';\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootswatch/dist/flatly/bootstrap.min.css';\r\nimport '@fortawesome/fontawesome-free/js/all';\r\n\r\n\r\nconst Div = styled.div`\r\n  text-align: center;\r\n  background-color: rgb(20, 56, 97);\r\n  color: #cccccc;\r\n\r\n`;\r\n\r\nconst COIN_COUNT = 10;\r\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\r\n\r\nfunction App (props){\r\n\r\n  const [balance, setBalance] = useState(10000);\r\n  const [showBalance, setShowBalance] = useState(false);\r\n  const [coinData, setCoinData] = useState([]);\r\n\r\n  const componentDidMount  = async () => {\r\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\r\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\r\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\r\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\r\n    const coinData = await Promise.all(promises);\r\n    const coinPriceData = coinData.map(function(response) {\r\n      const coin = response.data;\r\n      return {\r\n        key:    coin.id,\r\n        name:   coin.name,\r\n        ticker: coin.symbol,\r\n        balance: 0,\r\n        price: formatPrice(coin.quotes.USD.price),\r\n      };\r\n    });\r\n    setCoinData(coinPriceData);\r\n    //component did mount\r\n    }\r\n  \r\n  useEffect(function() {\r\n    if (coinData.length === 0 ) {\r\n      componentDidMount();\r\n    } \r\n  });\r\n\r\n  const handleBrrr = () => {\r\n    setBalance( oldBalance => oldBalance + 1200);\r\n  }\r\n\r\n\r\n\r\nconst handleBalanceVisibilityChange = () => {\r\n    setShowBalance(oldValue => !oldValue)\r\n  }\r\n\r\nconst handleTransaction = (isBuy, valueChangeId) => {\r\n  var balanceChange = isBuy ? 1 : -1;\r\n  const newCoinData = coinData.map( function(values) {\r\n    let newValues = {...values};\r\n    if ( valueChangeId == values.key) {\r\n      newValues.balance += balanceChange;\r\n      setBalance( oldBalance => oldBalance - balanceChange * newValues.price );\r\n    }\r\n    return newValues;\r\n  });\r\n  setCoinData(newCoinData);\r\n}\r\n\r\n\r\nconst handleRefresh = async (valueChangeId) => {\r\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\r\n    const response = await axios.get(tickerUrl);\r\n    const newPrice = formatPrice(response.data.quotes.USD.price);\r\n    const newCoinData = coinData.map( function( values ) {\r\n      let newValues = { ...values };\r\n      if( valueChangeId === values.key ){\r\n            newValues.price = newPrice;\r\n      }\r\n      return newValues;\r\n\r\n    });\r\n    setCoinData(newCoinData);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Div className=\"App\">\r\n      <ExchangeHeader />\r\n      <AccountBalance \r\n        amount={balance} \r\n        showBalance={showBalance} \r\n        handleBrrr={handleBrrr}\r\n        handleBalanceVisibilityChange={handleBalanceVisibilityChange} \r\n         />\r\n      <CoinList \r\n        coinData={coinData} \r\n        showBalance={showBalance}\r\n        handleTransaction={handleTransaction}\r\n        handleRefresh={handleRefresh}\r\n        \r\n        />\r\n    </Div>\r\n  );\r\n\r\n  \r\n \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}