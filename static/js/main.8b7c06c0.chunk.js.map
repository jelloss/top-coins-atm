{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","components/ExchangeHeader/logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","Coin","props","name","ticker","price","showBalance","balance","action","method","onClick","event","preventDefault","handleRefresh","tickerId","Table","table","CoinList","coinData","map","key","Section","section","AccountBalance","buttonText","content","amount","handleBalanceVisibilityChange","Img","img","Header","header","H1","h1","ExchangeHeader","src","logo","alt","Component","Div","div","formatPrice","parseFloat","Number","toFixed","App","useState","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangeId","tickerUrl","newPrice","newCoinData","values","newValues","className","oldValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b7c06c0.chunk.js","sourcesContent":["import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Td = styled.td`\r\n  border: 1px solid #cccccc;\r\n  padding: 0.5rem 3rem 0.5rem;\r\n`;\r\n\r\n\r\nexport default function Coin(props) {\r\n\r\n\r\n    const handleClick = (event) => {\r\n      //prevent the default action of submitting\r\n      event.preventDefault();\r\n\r\n      props.handleRefresh(props.tickerId);\r\n      }\r\n      \r\n    return (\r\n      <tr>\r\n          <Td>{props.name}</Td>\r\n          <Td>{props.ticker}</Td>\r\n          <Td>${props.price}</Td>\r\n          {props.showBalance ? <Td>{props.balance}</Td> : null}\r\n          <Td>\r\n            <form action=\"#\" method=\"POST\">\r\n              <button onClick={handleClick}>Refresh</button>\r\n            </form>\r\n            \r\n          </Td>\r\n\r\n      </tr>\r\n    );\r\n          \r\n};\r\n\r\nCoin.propTypes = { \r\n  name: propTypes.string.isRequired,\r\n  ticker: propTypes.string.isRequired,\r\n  price: propTypes.number.isRequired\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport Coin from '../Coin/Coin';\r\nimport styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n    margin: 25px auto 50px auto;\r\n    display: inline-block;\r\n    font-size: 1.4rem;                         \r\n`;\r\n\r\n\r\n\r\nexport default function CoinList (props) {\r\n\r\n        return (\r\n            <Table>\r\n            <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Ticker</th>\r\n                  <th>Price</th>\r\n                  {props.showBalance ? <th>Balance</th> : null}\r\n                  <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                props.coinData.map( ({key, name, ticker, price, balance }) => \r\n                  <Coin key={key} \r\n                        handleRefresh={props.handleRefresh} \r\n                        name={name} \r\n                        ticker={ticker} \r\n                        showBalance={props.showBalance}\r\n                        balance={balance}\r\n                        price={price} \r\n                        tickerId={key} />\r\n                )\r\n              }\r\n         \r\n            </tbody>\r\n          </Table>\r\n        )\r\n    \r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.section`\r\n    font-size: 2rem;\r\n    text-align: left;\r\n    padding: 2rem 3rem 0rem;\r\n`;\r\n\r\n\r\n\r\n\r\nexport default function AccountBalance (props) {\r\n\r\n    const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\r\n    let content = null;\r\n    if ( props.showBalance ) {\r\n        content = <>Balance: ${props.amount}</>;\r\n    }\r\n    return (\r\n        <Section >\r\n            {content}\r\n            <button onClick={props.handleBalanceVisibilityChange}>{buttonText}</button>\r\n        </Section>\r\n    );\r\n}\r\n\r\n\r\n\r\nAccountBalance.propTypes = { \r\n    amount: PropTypes.number.isRequired\r\n  }","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\nimport logo from './logo.svg';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Img = styled.img`\r\n    height: 8rem;\r\n    pointer-events: none;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    background-color: #282c34;\r\n    min-height: 20vh;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: white;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n    font-size: 4rem;\r\n`;\r\n  \r\n  \r\n\r\nexport default class ExchangeHeader extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Header >\r\n                <Img src={logo} alt=\"React logo\" />\r\n                <H1>\r\n                    Coin exchange \r\n                </H1>\r\n            </Header>\r\n        );\r\n    } \r\n}\r\n","import React, {useState, useEffect} from 'react';\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\n\nimport styled from 'styled-components';\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader';\nimport axios from 'axios';\n\nconst Div = styled.div`\n  text-align: center;\n  background-color: rgb(20, 56, 97);\n  color: #cccccc;\n\n`;\n\nconst COIN_COUNT = 10;\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\n\n\n\n\nfunction App (props){\n\n\n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount  = async () => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function(response) {\n      const coin = response.data;\n      return {\n        key:    coin.id,\n        name:   coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: formatPrice(coin.quotes.USD.price),\n      };\n    });\n    setCoinData(coinPriceData);\n    //component did mount\n    }\n  \n  useEffect(function() {\n    if (coinData.length === 0 ) {\n      componentDidMount();\n    } \n  });\n\n\n\n\nconst handleBalanceVisibilityChange = () => {\n    setShowBalance(oldValue => !oldValue)\n  }\n\nconst handleRefresh = async (valueChangeId) => {\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n    const response = await axios.get(tickerUrl);\n    const newPrice = formatPrice(response.data.quotes.USD.price);\n    const newCoinData = coinData.map( function( values ) {\n      let newValues = { ...values };\n      if( valueChangeId === values.key ){\n            newValues.price = newPrice;\n      }\n      return newValues;\n\n    });\n    setCoinData(newCoinData);\n  }\n\n\n  return (\n    <Div className=\"App\">\n      <ExchangeHeader />\n      <AccountBalance \n        amount={balance} \n        showBalance={showBalance} \n        handleBalanceVisibilityChange={handleBalanceVisibilityChange} />\n      <CoinList \n        coinData={coinData} \n        showBalance={showBalance}\n        handleRefresh={handleRefresh} />\n    </Div>\n  );\n\n  \n \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}