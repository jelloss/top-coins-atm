[{"C:\\Users\\jelle\\OneDrive\\Documenten\\react\\learn-react-in-xminutes\\src\\coin-exchange\\src\\index.js":"1","C:\\Users\\jelle\\OneDrive\\Documenten\\react\\learn-react-in-xminutes\\src\\coin-exchange\\src\\App.js":"2","C:\\Users\\jelle\\OneDrive\\Documenten\\react\\learn-react-in-xminutes\\src\\coin-exchange\\src\\reportWebVitals.js":"3","C:\\Users\\jelle\\OneDrive\\Documenten\\react\\learn-react-in-xminutes\\src\\coin-exchange\\src\\components\\Coin\\Coin.jsx":"4","C:\\Users\\jelle\\OneDrive\\Documenten\\react\\learn-react-in-xminutes\\src\\coin-exchange\\src\\components\\AccountBalance\\AccountBalance.jsx":"5","C:\\Users\\jelle\\OneDrive\\Documenten\\react\\learn-react-in-xminutes\\src\\coin-exchange\\src\\components\\CoinList\\CoinList.jsx":"6","C:\\Users\\jelle\\OneDrive\\Documenten\\react\\learn-react-in-xminutes\\src\\coin-exchange\\src\\components\\ExchangeHeader\\ExchangeHeader.jsx":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":2504,"mtime":1615919031904,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":981,"mtime":1615909378144,"results":"12","hashOfConfig":"9"},{"size":744,"mtime":1615909995725,"results":"13","hashOfConfig":"9"},{"size":1234,"mtime":1615909827391,"results":"14","hashOfConfig":"9"},{"size":770,"mtime":1612951148000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"crtc37",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\jelle\\OneDrive\\Documenten\\react\\learn-react-in-xminutes\\src\\coin-exchange\\src\\index.js",[],["34","35"],"C:\\Users\\jelle\\OneDrive\\Documenten\\react\\learn-react-in-xminutes\\src\\coin-exchange\\src\\App.js",["36"],"import React, {useState, useEffect} from 'react';\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\n\nimport styled from 'styled-components';\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader';\nimport axios from 'axios';\n\nconst Div = styled.div`\n  text-align: center;\n  background-color: rgb(20, 56, 97);\n  color: #cccccc;\n\n`;\n\nconst COIN_COUNT = 10;\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\n\n\n\n\nfunction App (props){\n\n\n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount  = async () => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function(response) {\n      const coin = response.data;\n      return {\n        key:    coin.id,\n        name:   coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: formatPrice(coin.quotes.USD.price),\n      };\n    });\n    setCoinData(coinPriceData);\n    //component did mount\n    }\n  \n  useEffect(function() {\n    if (coinData.length === 0 ) {\n      componentDidMount();\n    } \n  });\n\n\n\n\nconst handleBalanceVisibilityChange = () => {\n    setShowBalance(oldValue => !oldValue)\n  }\n\nconst handleRefresh = async (valueChangeId) => {\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n    const response = await axios.get(tickerUrl);\n    const newPrice = formatPrice(response.data.quotes.USD.price);\n    const newCoinData = coinData.map( function( values ) {\n      let newValues = { ...values };\n      if( valueChangeId === values.key ){\n            newValues.price = newPrice;\n      }\n      return newValues;\n\n    });\n    setCoinData(newCoinData);\n  }\n\n\n  return (\n    <Div className=\"App\">\n      <ExchangeHeader />\n      <AccountBalance \n        amount={balance} \n        showBalance={showBalance} \n        handleBalanceVisibilityChange={handleBalanceVisibilityChange} />\n      <CoinList \n        coinData={coinData} \n        showBalance={showBalance}\n        handleRefresh={handleRefresh} />\n    </Div>\n  );\n\n  \n \n}\n\nexport default App;\n","C:\\Users\\jelle\\OneDrive\\Documenten\\react\\learn-react-in-xminutes\\src\\coin-exchange\\src\\reportWebVitals.js",[],"C:\\Users\\jelle\\OneDrive\\Documenten\\react\\learn-react-in-xminutes\\src\\coin-exchange\\src\\components\\Coin\\Coin.jsx",[],"C:\\Users\\jelle\\OneDrive\\Documenten\\react\\learn-react-in-xminutes\\src\\coin-exchange\\src\\components\\AccountBalance\\AccountBalance.jsx",["37"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.section`\r\n    font-size: 2rem;\r\n    text-align: left;\r\n    padding: 2rem 3rem 0rem;\r\n`;\r\n\r\n\r\n\r\n\r\nexport default function AccountBalance (props) {\r\n\r\n    const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\r\n    let content = null;\r\n    if ( props.showBalance ) {\r\n        content = <>Balance: ${props.amount}</>;\r\n    }\r\n    return (\r\n        <Section >\r\n            {content}\r\n            <button onClick={props.handleBalanceVisibilityChange}>{buttonText}</button>\r\n        </Section>\r\n    );\r\n}\r\n\r\n\r\n\r\nAccountBalance.propTypes = { \r\n    amount: PropTypes.number.isRequired\r\n  }","C:\\Users\\jelle\\OneDrive\\Documenten\\react\\learn-react-in-xminutes\\src\\coin-exchange\\src\\components\\CoinList\\CoinList.jsx",["38"],"import React, { Component } from 'react';\r\nimport Coin from '../Coin/Coin';\r\nimport styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n    margin: 25px auto 50px auto;\r\n    display: inline-block;\r\n    font-size: 1.4rem;                         \r\n`;\r\n\r\n\r\n\r\nexport default function CoinList (props) {\r\n\r\n        return (\r\n            <Table>\r\n            <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Ticker</th>\r\n                  <th>Price</th>\r\n                  {props.showBalance ? <th>Balance</th> : null}\r\n                  <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                props.coinData.map( ({key, name, ticker, price, balance }) => \r\n                  <Coin key={key} \r\n                        handleRefresh={props.handleRefresh} \r\n                        name={name} \r\n                        ticker={ticker} \r\n                        showBalance={props.showBalance}\r\n                        balance={balance}\r\n                        price={price} \r\n                        tickerId={key} />\r\n                )\r\n              }\r\n         \r\n            </tbody>\r\n          </Table>\r\n        )\r\n    \r\n}\r\n","C:\\Users\\jelle\\OneDrive\\Documenten\\react\\learn-react-in-xminutes\\src\\coin-exchange\\src\\components\\ExchangeHeader\\ExchangeHeader.jsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":25,"column":19,"nodeType":"45","messageId":"46","endLine":25,"endColumn":29},{"ruleId":"43","severity":1,"message":"47","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":26},{"ruleId":"43","severity":1,"message":"47","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":26},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'setBalance' is assigned a value but never used.","Identifier","unusedVar","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]